package com.xworkz.config;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRegistration;

import org.springframework.web.context.support.AnnotationConfigWebApplicationContext;
import org.springframework.web.servlet.DispatcherServlet;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;

import net.codejava.config.WebMvcConfig;

public class DispatcherInitializer extends AbstractAnnotationConfigDispatcherServletInitializer implements WebMvcConfigurer{

	
	
	public DispatcherInitializer() {
	System.out.println("------------DispatcherInitializer constructor----------");
	}

	@Override
	protected Class<?>[] getRootConfigClasses() {		
		System.out.println("------------ getRootConfig Classes----------");
		return new Class[] {MvcConfig.class};
	}

	@Override
	protected String[] getServletMappings() {
		System.out.println("--------------- getServletMappings----------");
		
		return new String[] {"/"};
	}

	@Override
	protected Class<?>[] getServletConfigClasses() {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public void onStartup(ServletContext servletContext) throws ServletException {
		  AnnotationConfigWebApplicationContext appContext = new AnnotationConfigWebApplicationContext();
	        appContext.register(MvcConfig.class);
	         
	        ServletRegistration.Dynamic dispatcher = servletContext.addServlet(
	                "SpringDispatcher", new DispatcherServlet(appContext));
	        dispatcher.setLoadOnStartup(1);
	        dispatcher.addMapping("/");
	}

}
